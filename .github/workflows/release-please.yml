name: Release Please

on:
  push:
    branches:
      - main
  release:
    types: [published, created]

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json

      # Set up auto-merge for release PRs
      - name: Set up auto-merge for release PR
        if: ${{ steps.release.outputs.pr }}
        run: |
          PR_NUMBER=$(echo '${{ steps.release.outputs.pr }}' | jq -r '.number')
          echo "Setting up auto-merge for PR #${PR_NUMBER}"

          # Try to enable auto-merge - this will work if branch protection allows it
          gh pr merge --auto --squash "$PR_NUMBER" || echo "Auto-merge setup failed - this is expected if branch protection requires approval"

          echo "âœ… Release PR #${PR_NUMBER} auto-merge configured"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Create release assets when a release is created
  create-release-assets:
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create integration zip
        run: |
          cd custom_components/meraki_dashboard
          zip -r ../../meraki_dashboard.zip . -x "*.pyc" "*/__pycache__/*" "*.git*"

      - name: Upload integration zip to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.release-please.outputs.tag_name }} meraki_dashboard.zip --clobber

      - name: Update docs changelog
        run: |
          # Create header for docs changelog
          cat > docs/changelog.md << 'CHANGELOG_EOF'
---
layout: default
title: Changelog
description: Release history and changelog for the Meraki Dashboard Home Assistant Integration
---

# Changelog

All notable changes to this project are documented here. The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

<div class="alert alert-info" role="alert">
  <i class="bi bi-info-circle me-2"></i>
  <strong>Note:</strong> This changelog is automatically generated from our git commit history using <a href="https://github.com/googleapis/release-please">release-please</a>. For the complete changelog including technical details, see the full <a href="{{ site.repository }}/blob/main/CHANGELOG.md">CHANGELOG.md</a> in our repository.
</div>

CHANGELOG_EOF

          # Extract content from root CHANGELOG.md (skip first few lines)
          if [ -f CHANGELOG.md ]; then
            tail -n +8 CHANGELOG.md | sed 's/## \[/### [/g' >> docs/changelog.md
          fi

          # Add footer
          cat >> docs/changelog.md << 'FOOTER_EOF'

## Support

- **Questions**: Check our [FAQ](faq) or see the troubleshooting section on the [main page](/)
- **Issues**: Report bugs on [GitHub Issues]({{ site.repository }}/issues)
- **Discussions**: Join the conversation on [GitHub Discussions]({{ site.repository }}/discussions)

## Links

- **[Full Changelog]({{ site.repository }}/blob/main/CHANGELOG.md)** - Complete technical changelog
- **[Releases]({{ site.repository }}/releases)** - Download specific versions
- **[Release Notes]({{ site.repository }}/releases)** - Detailed release information
FOOTER_EOF

      - name: Commit updated docs changelog
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/changelog.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "docs: update changelog for ${{ needs.release-please.outputs.tag_name }}"
            git push
          fi

  # Fallback job for handling releases created via release events
  handle-release-event:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create integration zip
        run: |
          cd custom_components/meraki_dashboard
          zip -r ../../meraki_dashboard.zip . -x "*.pyc" "*/__pycache__/*" "*.git*"

      - name: Upload integration zip to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} meraki_dashboard.zip --clobber